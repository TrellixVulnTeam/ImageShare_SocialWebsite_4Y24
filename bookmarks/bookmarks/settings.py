"""
Django settings for bookmarks project.

Generated by 'django-admin startproject' using Django 1.8.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from django.core.urlresolvers import reverse_lazy

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&tza4^6k)ell=6kt6y_!-skkic_p*5ml*8q2no!^o@*+ole)e0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'account',
    'social.apps.django_app.default',
    'images',
    'sorl.thumbnail',
    'actions',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'bookmarks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmarks.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': 'social_website',
            'USER': 'chandan',
            'PASSWORD': 'root',
            'HOST': 'localhost',
            'PORT': '3306',
            'TEST': {
                'NAME': 'social_website_test',
            },
        }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'


#reverse_lazy is like reverse and used to build the URL dynamically before URL configurations are loaded
LOGIN_REDIRECT_URL = reverse_lazy('dashboard')
LOGIN_URL = reverse_lazy('login')
LOGOUT_URL = reverse_lazy('logout')



#Email configuration created by chandan
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'chandanhegde26@gmail.com'
EMAIL_HOST_PASSWORD = 'chandan12345'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

#To place media files uploaded by the users
#MEDIA_URL is the base URL to serve the files uploaded by users
MEDIA_URL = '/media/'
#MEDIA_ROOT is the local path where the images actually reside
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')


#To specify the authentication backend for the available users
#Django will identify authentication in below order
AUTHENTICATION_BACKENDS = (
                    'django.contrib.auth.backends.ModelBackend',
                    'account.authentication.EmailAuthBackend',
                    'social.backends.facebook.Facebook2OAuth2',#for face book authentication
                    'social.backends.google.GoogleOAuth2',
                    )





#Creating a facebook authentication for django auth framework
SOCIAL_AUTH_FACEBOOK_KEY = '356920068048038' # Facebook App ID
SOCIAL_AUTH_FACEBOOK_SECRET = 'f57792e060753abb7f15ed183512ee4a' # Facebook App Secret


#Asking additional permissions for facebook users
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']


SOCIAL_AUTH_REDIRECT_IS_HTTPS = True



#google authentication
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY ='419087081878-rt976l4dovnujv6lhjnfgtkc8sejpjlf.apps.googleusercontent.com' # Google Consumer Key
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'ItMLE4-nSID-UG73xm7tiL2f' # Google Consumer Secret


#adds a get_absolute_url() method dynamically to any model
#The below setting is used to generate the URL for model specified
#In below code for  u.username is used to generate the URL with name user_detail
ABSOLUTE_URL_OVERRIDES = {
'auth.user': lambda u: reverse_lazy('user_detail',
                                    args=[u.username])
}



#Redis settings

REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 0
